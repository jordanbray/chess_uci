# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/rust/tags/
image: "rust:latest"

# Optional: Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-a-service
#services:
#  - mysql:latest
#  - redis:latest
#  - postgres:latest

# Optional: Install a C compiler, cmake and git into the container.
# You will often need this when you (or any of your dependencies) depends on C code.
before_script:
- apt-get update -yqq
- apt-get install -yqq --no-install-recommends sshpass

# Use cargo to test the project
test:cargo:
  script:
  - rustc --version && cargo --version      # Print version info for debugging
  - cargo test --all --verbose

deploy_production:
  stage: deploy
  environment: Production
  only:
    - master
  script:
  - cargo doc --release
  - sshpass -V
  - export SSHPASS=$USER_PASS
#  - sshpass -e scp -o stricthostkeychecking=no -r target/doc/* chess_docs@jordanbray.com:/bucket/chess_docs
#  - sshpass -e scp -o stricthostkeychecking=no -r docs/* chess_docs@jordanbray.com:/bucket/chess_docs
  - cargo login $CRATESIO_TOKEN
  - cargo publish

